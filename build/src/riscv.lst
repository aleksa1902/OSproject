GAS LISTING /tmp/ccIvwpbK.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB22:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by os on 4/26/22.
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** #include "../h/riscv.hpp"
   5:src/riscv.cpp **** #include "../h/tcb.hpp"
   6:src/riscv.cpp **** #include "../lib/console.h"
   7:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   8:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 10 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  11:src/riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 11 5
  21              		.loc 1 11 39 is_stmt 0
  22              	#APP
  23              	# 11 "src/riscv.cpp" 1
  12              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 12 5 is_stmt 1
  27              		.loc 1 12 30 is_stmt 0
  28              	# 12 "src/riscv.cpp" 1
  13              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 13 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE22:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB23:
  14:src/riscv.cpp **** 
GAS LISTING /tmp/ccIvwpbK.s 			page 2


  15:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  47              		.loc 1 15 36 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FA 		addi	sp,sp,-96
  50              		.cfi_def_cfa_offset 96
  51 0024 233C1104 		sd	ra,88(sp)
  52 0028 23388104 		sd	s0,80(sp)
  53 002c 23349104 		sd	s1,72(sp)
  54 0030 23302105 		sd	s2,64(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57              		.cfi_offset 9, -24
  58              		.cfi_offset 18, -32
  59 0034 13040106 		addi	s0,sp,96
  60              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp ****     uint64 scause = r_scause();
  61              		.loc 1 16 5
  62              	.LBB46:
  63              	.LBB47:
  64              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 4/26/22.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class Riscv{
  11:src/../h/riscv.hpp **** public:
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     //read
  16:src/../h/riscv.hpp ****     static uint64 r_scause();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     //write
  19:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     static uint64 r_stvec();
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     static uint64 r_stval();
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     enum BitMaskSip{
  34:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  35:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  36:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  37:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccIvwpbK.s 			page 3


  38:src/../h/riscv.hpp ****     // mask set
  39:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  40:src/../h/riscv.hpp ****     // mask clear
  41:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     static uint64 r_sip();
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     enum BitMaskSstatus{
  48:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  49:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  50:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  51:src/../h/riscv.hpp ****     };
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     static void supervisorTrap();
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp **** private:
  64:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  65:src/../h/riscv.hpp **** };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  68:src/../h/riscv.hpp ****     uint64 volatile scause;
  65              		.loc 2 68 5
  69:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  66              		.loc 2 69 5
  67              		.loc 2 69 72 is_stmt 0
  68              	#APP
  69              	# 69 "src/../h/riscv.hpp" 1
  70              	    return scause;
  70              		csrr a5, scause
  71              	# 0 "" 2
  72              	#NO_APP
  73 003c 2334F4FA 		sd	a5,-88(s0)
  74              		.loc 2 70 5 is_stmt 1
  75              		.loc 2 70 12 is_stmt 0
  76 0040 033784FA 		ld	a4,-88(s0)
  77              	.LVL0:
  78              	.LBE47:
  79              	.LBE46:
  17:src/riscv.cpp **** 
  18:src/riscv.cpp ****     // velicina gde cu da mu obavestim koji je poziv
  19:src/riscv.cpp ****     size_t argument0;
  80              		.loc 1 19 5 is_stmt 1
  20:src/riscv.cpp ****     __asm__ volatile("mv %0, a0" : "=r" (argument0));
  81              		.loc 1 20 5
  82              		.loc 1 20 53 is_stmt 0
  83              	#APP
  84              	# 20 "src/riscv.cpp" 1
GAS LISTING /tmp/ccIvwpbK.s 			page 4


  21              	
  85              		mv a5, a0
  86              	# 0 "" 2
  87              	.LVL1:
  22:src/riscv.cpp ****     if(argument0 != 0 && scause == 0x0000000000000009UL){
  88              		.loc 1 22 5 is_stmt 1
  89              	#NO_APP
  90              	.LBB48:
  91 0048 63860700 		beqz	a5,.L4
  92              		.loc 1 22 23 is_stmt 0 discriminator 1
  93 004c 93069000 		li	a3,9
  94 0050 6302D704 		beq	a4,a3,.L13
  95              	.L4:
  96              	.LBE48:
  23:src/riscv.cpp ****         // prekopirano od mickovog koda
  24:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; uint64 sstatus = r_sstatus();
  25:src/riscv.cpp **** 
  26:src/riscv.cpp **** 
  27:src/riscv.cpp ****         if(argument0 == 1){ // syscall za mem_alloc
  28:src/riscv.cpp ****             // potrebni argumenti za mem_alloc
  29:src/riscv.cpp ****             size_t argument_sizet;
  30:src/riscv.cpp ****             void* argument_ret_void;
  31:src/riscv.cpp **** 
  32:src/riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (argument_sizet));
  33:src/riscv.cpp ****             argument_ret_void = MemoryAllocator::mem_alloc(argument_sizet);
  34:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (argument_ret_void));
  35:src/riscv.cpp ****         }else if(argument0 == 2){ // sistemski poziv za mem_free
  36:src/riscv.cpp ****             // potrebni argumenti za mem_free
  37:src/riscv.cpp ****             void* argument_void;
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (argument_void));
  40:src/riscv.cpp ****             MemoryAllocator::mem_free(argument_void);
  41:src/riscv.cpp ****         }else if(argument0 == 11){
  42:src/riscv.cpp ****             // create_thread
  43:src/riscv.cpp ****             thread_t handler = 0;
  44:src/riscv.cpp ****             TCB::Body sr = 0;
  45:src/riscv.cpp ****             void* arg = 0;
  46:src/riscv.cpp **** 
  47:src/riscv.cpp ****             __asm__ volatile("mv %0, a1" : "=r" (handler));
  48:src/riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (sr));
  49:src/riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg));
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****             handler = TCB::createThread(sr);
  52:src/riscv.cpp **** 
  53:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (handler));
  54:src/riscv.cpp **** 
  55:src/riscv.cpp **** 
  56:src/riscv.cpp ****         }else if(argument0 == 12){
  57:src/riscv.cpp ****             //thread exit nema nikakve argumente samo pozove funkciju ima povratnu vrednost
  58:src/riscv.cpp **** 
  59:src/riscv.cpp ****         }else if(argument0 == 13){
  60:src/riscv.cpp ****             // thread_dispatch i on ne prima nikakve argumente
  61:src/riscv.cpp ****         }
  62:src/riscv.cpp **** 
  63:src/riscv.cpp **** 
  64:src/riscv.cpp ****         w_sstatus(sstatus); w_sepc(sepc);
  65:src/riscv.cpp ****     }
GAS LISTING /tmp/ccIvwpbK.s 			page 5


  66:src/riscv.cpp ****     else if (scause == 0x0000000000000009UL) {
  97              		.loc 1 66 10 is_stmt 1
  98              	.LBB102:
  99              	.LBB49:
 100 0054 93079000 		li	a5,9
 101              	.LVL2:
 102 0058 630EF70A 		beq	a4,a5,.L14
 103              	.LBE49:
 104              	.LBE102:
  67:src/riscv.cpp ****         // interrupt: no; cause code: environment call from S-mode(9)
  68:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; uint64 sstatus = r_sstatus();
  69:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  70:src/riscv.cpp ****         TCB::dispatch();
  71:src/riscv.cpp ****         w_sstatus(sstatus); w_sepc(sepc);
  72:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 105              		.loc 1 72 12
 106              	.LBB103:
 107              	.LBB77:
 108              	.LBB50:
 109 005c 9307F0FF 		li	a5,-1
 110 0060 9397F703 		slli	a5,a5,63
 111 0064 93871700 		addi	a5,a5,1
 112 0068 6304F70E 		beq	a4,a5,.L15
  73:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  74:src/riscv.cpp ****         TCB::timeSliceCounter++;
  75:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
  76:src/riscv.cpp ****             uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
  77:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
  78:src/riscv.cpp ****             TCB::dispatch();
  79:src/riscv.cpp ****             w_sstatus(sstatus); w_sepc(sepc);
  80:src/riscv.cpp ****         }
  81:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  82:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 113              		.loc 1 82 12
 114 006c 9307F0FF 		li	a5,-1
 115 0070 9397F703 		slli	a5,a5,63
 116 0074 93879700 		addi	a5,a5,9
 117 0078 6302F714 		beq	a4,a5,.L16
 118              	.LVL3:
 119              	.L3:
 120              	.LBE50:
 121              	.LBE77:
 122              	.LBE103:
  83:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  84:src/riscv.cpp ****         console_handler();
  85:src/riscv.cpp ****     } else {
  86:src/riscv.cpp ****         // unexpected trap cause
  87:src/riscv.cpp ****         // definisati
  88:src/riscv.cpp ****     }
  89:src/riscv.cpp **** }
 123              		.loc 1 89 1 is_stmt 0
 124 007c 83308105 		ld	ra,88(sp)
 125              		.cfi_remember_state
 126              		.cfi_restore 1
 127 0080 03340105 		ld	s0,80(sp)
 128              		.cfi_restore 8
 129              		.cfi_def_cfa 2, 96
GAS LISTING /tmp/ccIvwpbK.s 			page 6


 130 0084 83348104 		ld	s1,72(sp)
 131              		.cfi_restore 9
 132 0088 03390104 		ld	s2,64(sp)
 133              		.cfi_restore 18
 134 008c 13010106 		addi	sp,sp,96
 135              		.cfi_def_cfa_offset 0
 136 0090 67800000 		jr	ra
 137              	.LVL4:
 138              	.L13:
 139              		.cfi_restore_state
 140              	.LBB104:
 141              	.LBB78:
  24:src/riscv.cpp **** 
 142              		.loc 1 24 9 is_stmt 1
 143              	.LBB79:
 144              	.LBB80:
  71:src/../h/riscv.hpp **** }
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  74:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  75:src/../h/riscv.hpp **** }
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
  78:src/../h/riscv.hpp ****     uint64 volatile sepc;
 145              		.loc 2 78 5
  79:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 146              		.loc 2 79 5
 147              		.loc 2 79 64 is_stmt 0
 148              	#APP
 149              	# 79 "src/../h/riscv.hpp" 1
  80              	    return sepc;
 150              		csrr a4, sepc
 151              	# 0 "" 2
 152              	.LVL5:
 153              	#NO_APP
 154 0098 233CE4FA 		sd	a4,-72(s0)
 155              		.loc 2 80 5 is_stmt 1
 156              		.loc 2 80 12 is_stmt 0
 157 009c 833484FB 		ld	s1,-72(s0)
 158              	.LBE80:
 159              	.LBE79:
  24:src/riscv.cpp **** 
 160              		.loc 1 24 34
 161 00a0 93844400 		addi	s1,s1,4
 162              	.LVL6:
  24:src/riscv.cpp **** 
 163              		.loc 1 24 37 is_stmt 1
 164              	.LBB81:
 165              	.LBB82:
  81:src/../h/riscv.hpp **** }
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  84:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  85:src/../h/riscv.hpp **** }
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
  88:src/../h/riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccIvwpbK.s 			page 7


  89:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  90:src/../h/riscv.hpp ****     return stvec;
  91:src/../h/riscv.hpp **** }
  92:src/../h/riscv.hpp **** 
  93:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
  94:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  95:src/../h/riscv.hpp **** }
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval() {
  98:src/../h/riscv.hpp ****     uint64 volatile stval;
  99:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 100:src/../h/riscv.hpp ****     return stval;
 101:src/../h/riscv.hpp **** }
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 104:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 105:src/../h/riscv.hpp **** }
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 109:src/../h/riscv.hpp **** }
 110:src/../h/riscv.hpp **** 
 111:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 116:src/../h/riscv.hpp ****     uint64 volatile sip;
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 118:src/../h/riscv.hpp ****     return sip;
 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 122:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 123:src/../h/riscv.hpp **** }
 124:src/../h/riscv.hpp **** 
 125:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 134:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 166              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 167              		.loc 2 135 5
 168              		.loc 2 135 76 is_stmt 0
 169              	#APP
 170              	# 135 "src/../h/riscv.hpp" 1
 136              	    return sstatus;
 171              		csrr a4, sstatus
 172              	# 0 "" 2
 173              	#NO_APP
 174 00a8 2338E4FA 		sd	a4,-80(s0)
GAS LISTING /tmp/ccIvwpbK.s 			page 8


 175              		.loc 2 136 5 is_stmt 1
 176              		.loc 2 136 12 is_stmt 0
 177 00ac 033904FB 		ld	s2,-80(s0)
 178              	.LVL7:
 179              	.LBE82:
 180              	.LBE81:
  27:src/riscv.cpp ****             // potrebni argumenti za mem_alloc
 181              		.loc 1 27 9 is_stmt 1
 182              	.LBB83:
 183 00b0 13071000 		li	a4,1
 184 00b4 6380E702 		beq	a5,a4,.L17
 185              	.LBE83:
 186              	.LBE78:
 187              	.LBE104:
  35:src/riscv.cpp ****             // potrebni argumenti za mem_free
 188              		.loc 1 35 15
 189              	.LBB105:
 190              	.LBB99:
 191              	.LBB92:
 192              	.LBB84:
 193 00b8 13072000 		li	a4,2
 194 00bc 6386E702 		beq	a5,a4,.L18
 195              	.LBE84:
 196              	.LBE92:
 197              	.LBE99:
 198              	.LBE105:
  41:src/riscv.cpp ****             // create_thread
 199              		.loc 1 41 15
 200              	.LBB106:
 201              	.LBB100:
 202              	.LBB93:
 203              	.LBB89:
 204              	.LBB85:
 205 00c0 1307B000 		li	a4,11
 206 00c4 638AE702 		beq	a5,a4,.L19
 207              	.LVL8:
 208              	.L6:
 209              	.LBE85:
 210              	.LBE89:
 211              	.LBE93:
  64:src/riscv.cpp ****     }
 212              		.loc 1 64 9
 213              	.LBB94:
 214              	.LBB95:
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 215              		.loc 2 139 5
 216              		.loc 2 139 77 is_stmt 0
 217              	#APP
 218              	# 139 "src/../h/riscv.hpp" 1
 140              	}
 219              		csrw sstatus, s2
 220              	# 0 "" 2
 221              	.LVL9:
 222              	#NO_APP
 223              	.LBE95:
GAS LISTING /tmp/ccIvwpbK.s 			page 9


 224              	.LBE94:
  64:src/riscv.cpp ****     }
 225              		.loc 1 64 29 is_stmt 1
 226              	.LBB96:
 227              	.LBB97:
  84:src/../h/riscv.hpp **** }
 228              		.loc 2 84 5
  84:src/../h/riscv.hpp **** }
 229              		.loc 2 84 65 is_stmt 0
 230              	#APP
 231              	# 84 "src/../h/riscv.hpp" 1
  85:src/../h/riscv.hpp **** 
 232              		csrw sepc, s1
 233              	# 0 "" 2
 234              		.loc 2 85 1
 235              	#NO_APP
 236 00d0 6FF0DFFA 		j	.L3
 237              	.LVL10:
 238              	.L17:
 239              	.LBE97:
 240              	.LBE96:
 241              	.LBB98:
 242              	.LBB90:
  29:src/riscv.cpp ****             void* argument_ret_void;
 243              		.loc 1 29 13 is_stmt 1
  30:src/riscv.cpp **** 
 244              		.loc 1 30 13
  32:src/riscv.cpp ****             argument_ret_void = MemoryAllocator::mem_alloc(argument_sizet);
 245              		.loc 1 32 13
  32:src/riscv.cpp ****             argument_ret_void = MemoryAllocator::mem_alloc(argument_sizet);
 246              		.loc 1 32 66 is_stmt 0
 247              	#APP
 248              	# 32 "src/riscv.cpp" 1
 249              		mv a0, a1
 250              	# 0 "" 2
 251              	.LVL11:
  33:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (argument_ret_void));
 252              		.loc 1 33 13 is_stmt 1
  33:src/riscv.cpp ****             __asm__ volatile("mv a0, %0" : : "r" (argument_ret_void));
 253              		.loc 1 33 59 is_stmt 0
 254              	#NO_APP
 255 00d8 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 255      E7800000 
 256              	.LVL12:
  34:src/riscv.cpp ****         }else if(argument0 == 2){ // sistemski poziv za mem_free
 257              		.loc 1 34 13 is_stmt 1
  34:src/riscv.cpp ****         }else if(argument0 == 2){ // sistemski poziv za mem_free
 258              		.loc 1 34 70 is_stmt 0
 259              	#APP
 260              	# 34 "src/riscv.cpp" 1
 261              		mv a0, a0
 262              	# 0 "" 2
 263              	#NO_APP
 264              	.LBE90:
 265 00e4 6FF05FFE 		j	.L6
 266              	.LVL13:
 267              	.L18:
GAS LISTING /tmp/ccIvwpbK.s 			page 10


 268              	.LBB91:
 269              	.LBB87:
  37:src/riscv.cpp **** 
 270              		.loc 1 37 13 is_stmt 1
  39:src/riscv.cpp ****             MemoryAllocator::mem_free(argument_void);
 271              		.loc 1 39 13
  39:src/riscv.cpp ****             MemoryAllocator::mem_free(argument_void);
 272              		.loc 1 39 65 is_stmt 0
 273              	#APP
 274              	# 39 "src/riscv.cpp" 1
 275              		mv a0, a1
 276              	# 0 "" 2
 277              	.LVL14:
  40:src/riscv.cpp ****         }else if(argument0 == 11){
 278              		.loc 1 40 13 is_stmt 1
  40:src/riscv.cpp ****         }else if(argument0 == 11){
 279              		.loc 1 40 38 is_stmt 0
 280              	#NO_APP
 281 00ec 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 281      E7800000 
 282              	.LVL15:
 283              	.LBE87:
 284 00f4 6FF05FFD 		j	.L6
 285              	.LVL16:
 286              	.L19:
 287              	.LBB88:
 288              	.LBB86:
  43:src/riscv.cpp ****             TCB::Body sr = 0;
 289              		.loc 1 43 13 is_stmt 1
  44:src/riscv.cpp ****             void* arg = 0;
 290              		.loc 1 44 13
  45:src/riscv.cpp **** 
 291              		.loc 1 45 13
  47:src/riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (sr));
 292              		.loc 1 47 13
  47:src/riscv.cpp ****             __asm__ volatile("mv %0, a2" : "=r" (sr));
 293              		.loc 1 47 59 is_stmt 0
 294              	#APP
 295              	# 47 "src/riscv.cpp" 1
 296              		mv a5, a1
 297              	# 0 "" 2
 298              	.LVL17:
  48:src/riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg));
 299              		.loc 1 48 13 is_stmt 1
  48:src/riscv.cpp ****             __asm__ volatile("mv %0, a3" : "=r" (arg));
 300              		.loc 1 48 54 is_stmt 0
 301              	# 48 "src/riscv.cpp" 1
 302              		mv a0, a2
 303              	# 0 "" 2
 304              	.LVL18:
  49:src/riscv.cpp **** 
 305              		.loc 1 49 13 is_stmt 1
  49:src/riscv.cpp **** 
 306              		.loc 1 49 55 is_stmt 0
 307              	# 49 "src/riscv.cpp" 1
 308              		mv a5, a3
 309              	# 0 "" 2
GAS LISTING /tmp/ccIvwpbK.s 			page 11


 310              	.LVL19:
  51:src/riscv.cpp **** 
 311              		.loc 1 51 13 is_stmt 1
  51:src/riscv.cpp **** 
 312              		.loc 1 51 40 is_stmt 0
 313              	#NO_APP
 314 0104 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 314      E7800000 
 315              	.LVL20:
  53:src/riscv.cpp **** 
 316              		.loc 1 53 13 is_stmt 1
  53:src/riscv.cpp **** 
 317              		.loc 1 53 60 is_stmt 0
 318              	#APP
 319              	# 53 "src/riscv.cpp" 1
 320              		mv a0, a0
 321              	# 0 "" 2
 322              	#NO_APP
 323              	.LBE86:
 324 0110 6FF09FFB 		j	.L6
 325              	.LVL21:
 326              	.L14:
 327              	.LBE88:
 328              	.LBE91:
 329              	.LBE98:
 330              	.LBE100:
 331              	.LBB101:
 332              	.LBB67:
  68:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 333              		.loc 1 68 9 is_stmt 1
 334              	.LBB68:
 335              	.LBB69:
  78:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 336              		.loc 2 78 5
  79:src/../h/riscv.hpp ****     return sepc;
 337              		.loc 2 79 5
  79:src/../h/riscv.hpp ****     return sepc;
 338              		.loc 2 79 64 is_stmt 0
 339              	#APP
 340              	# 79 "src/../h/riscv.hpp" 1
 341              		csrr a5, sepc
 342              	# 0 "" 2
 343              	#NO_APP
 344 0118 2334F4FC 		sd	a5,-56(s0)
  80:src/../h/riscv.hpp **** }
 345              		.loc 2 80 5 is_stmt 1
  80:src/../h/riscv.hpp **** }
 346              		.loc 2 80 12 is_stmt 0
 347 011c 833484FC 		ld	s1,-56(s0)
 348              	.LBE69:
 349              	.LBE68:
  68:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 350              		.loc 1 68 34
 351 0120 93844400 		addi	s1,s1,4
 352              	.LVL22:
  68:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 353              		.loc 1 68 37 is_stmt 1
GAS LISTING /tmp/ccIvwpbK.s 			page 12


 354              	.LBB70:
 355              	.LBB71:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 356              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 357              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 358              		.loc 2 135 76 is_stmt 0
 359              	#APP
 360              	# 135 "src/../h/riscv.hpp" 1
 361              		csrr a5, sstatus
 362              	# 0 "" 2
 363              	#NO_APP
 364 0128 2330F4FC 		sd	a5,-64(s0)
 136:src/../h/riscv.hpp **** }
 365              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 366              		.loc 2 136 12 is_stmt 0
 367 012c 033904FC 		ld	s2,-64(s0)
 368              	.LVL23:
 369              	.LBE71:
 370              	.LBE70:
  69:src/riscv.cpp ****         TCB::dispatch();
 371              		.loc 1 69 9 is_stmt 1
  69:src/riscv.cpp ****         TCB::dispatch();
 372              		.loc 1 69 31 is_stmt 0
 373 0130 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 373      83B70700 
 374 0138 23B00700 		sd	zero,0(a5)
  70:src/riscv.cpp ****         w_sstatus(sstatus); w_sepc(sepc);
 375              		.loc 1 70 9 is_stmt 1
  70:src/riscv.cpp ****         w_sstatus(sstatus); w_sepc(sepc);
 376              		.loc 1 70 22 is_stmt 0
 377 013c 97000000 		call	_ZN3TCB8dispatchEv@plt
 377      E7800000 
 378              	.LVL24:
  71:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 379              		.loc 1 71 9 is_stmt 1
 380              	.LBB72:
 381              	.LBB73:
 139:src/../h/riscv.hpp **** }
 382              		.loc 2 139 5
 139:src/../h/riscv.hpp **** }
 383              		.loc 2 139 77 is_stmt 0
 384              	#APP
 385              	# 139 "src/../h/riscv.hpp" 1
 386              		csrw sstatus, s2
 387              	# 0 "" 2
 388              	.LVL25:
 389              	#NO_APP
 390              	.LBE73:
 391              	.LBE72:
  71:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL) {
 392              		.loc 1 71 29 is_stmt 1
 393              	.LBB74:
 394              	.LBB75:
  84:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccIvwpbK.s 			page 13


 395              		.loc 2 84 5
  84:src/../h/riscv.hpp **** }
 396              		.loc 2 84 65 is_stmt 0
 397              	#APP
 398              	# 84 "src/../h/riscv.hpp" 1
  85:src/../h/riscv.hpp **** 
 399              		csrw sepc, s1
 400              	# 0 "" 2
 401              		.loc 2 85 1
 402              	#NO_APP
 403 014c 6FF01FF3 		j	.L3
 404              	.LVL26:
 405              	.L15:
 406              	.LBE75:
 407              	.LBE74:
 408              	.LBE67:
 409              	.LBB76:
 410              	.LBB51:
  74:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 411              		.loc 1 74 9 is_stmt 1
  74:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice()) {
 412              		.loc 1 74 30 is_stmt 0
 413 0150 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 413      03370700 
 414              	.LVL27:
 415 0158 83370700 		ld	a5,0(a4)
 416 015c 93871700 		addi	a5,a5,1
 417 0160 2330F700 		sd	a5,0(a4)
  75:src/riscv.cpp ****             uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
 418              		.loc 1 75 9 is_stmt 1
 419              	.LBB52:
  75:src/riscv.cpp ****             uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
 420              		.loc 1 75 64 is_stmt 0
 421 0164 17070000 		la	a4,_ZN3TCB7runningE
 421      03370700 
 422 016c 03370700 		ld	a4,0(a4)
 423              	.LVL28:
 424              	.LBB53:
 425              	.LBB54:
 426              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** //
   2:src/../h/tcb.hpp **** // Created by os on 4/26/22.
   3:src/../h/tcb.hpp **** //
   4:src/../h/tcb.hpp **** 
   5:src/../h/tcb.hpp **** #ifndef PROJECT_BASE_V1_0_TCB_HPP
   6:src/../h/tcb.hpp **** #define PROJECT_BASE_V1_0_TCB_HPP
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** #include "../lib/hw.h"
   9:src/../h/tcb.hpp **** 
  10:src/../h/tcb.hpp **** class TCB {
  11:src/../h/tcb.hpp ****         public:
  12:src/../h/tcb.hpp ****         ~TCB() { delete[] stack; }
  13:src/../h/tcb.hpp ****         bool isFinished() const { return finished; }
  14:src/../h/tcb.hpp ****         void setFinished(bool value) { finished = value; }
  15:src/../h/tcb.hpp ****         uint64 getTimeSlice() const { return timeSlice; }
 427              		.loc 3 15 39 is_stmt 1
 428              		.loc 3 15 46 is_stmt 0
GAS LISTING /tmp/ccIvwpbK.s 			page 14


 429 0170 03370702 		ld	a4,32(a4)
 430              	.LVL29:
 431              	.LBE54:
 432              	.LBE53:
  75:src/riscv.cpp ****             uint64 sepc = r_sepc(); uint64 sstatus = r_sstatus();
 433              		.loc 1 75 9
 434 0174 63F8E700 		bgeu	a5,a4,.L20
 435              	.L11:
 436              	.LBE52:
  81:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {
 437              		.loc 1 81 9 is_stmt 1
 438              	.LVL30:
 439              	.LBB64:
 440              	.LBB65:
 112:src/../h/riscv.hpp **** }
 441              		.loc 2 112 5
 112:src/../h/riscv.hpp **** }
 442              		.loc 2 112 64 is_stmt 0
 443 0178 93072000 		li	a5,2
 444              	#APP
 445              	# 112 "src/../h/riscv.hpp" 1
 113:src/../h/riscv.hpp **** 
 446              		csrc sip, a5
 447              	# 0 "" 2
 448              		.loc 2 113 1
 449              	#NO_APP
 450 0180 6FF0DFEF 		j	.L3
 451              	.LVL31:
 452              	.L20:
 453              	.LBE65:
 454              	.LBE64:
 455              	.LBB66:
 456              	.LBB55:
  76:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 457              		.loc 1 76 13 is_stmt 1
 458              	.LBB56:
 459              	.LBB57:
  78:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 460              		.loc 2 78 5
  79:src/../h/riscv.hpp ****     return sepc;
 461              		.loc 2 79 5
  79:src/../h/riscv.hpp ****     return sepc;
 462              		.loc 2 79 64 is_stmt 0
 463              	#APP
 464              	# 79 "src/../h/riscv.hpp" 1
 465              		csrr a5, sepc
 466              	# 0 "" 2
 467              	#NO_APP
 468 0188 233CF4FC 		sd	a5,-40(s0)
  80:src/../h/riscv.hpp **** }
 469              		.loc 2 80 5 is_stmt 1
  80:src/../h/riscv.hpp **** }
 470              		.loc 2 80 12 is_stmt 0
 471 018c 833484FD 		ld	s1,-40(s0)
 472              	.LVL32:
 473              	.LBE57:
 474              	.LBE56:
GAS LISTING /tmp/ccIvwpbK.s 			page 15


  76:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 475              		.loc 1 76 37 is_stmt 1
 476              	.LBB58:
 477              	.LBB59:
 134:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 478              		.loc 2 134 5
 135:src/../h/riscv.hpp ****     return sstatus;
 479              		.loc 2 135 5
 135:src/../h/riscv.hpp ****     return sstatus;
 480              		.loc 2 135 76 is_stmt 0
 481              	#APP
 482              	# 135 "src/../h/riscv.hpp" 1
 483              		csrr a5, sstatus
 484              	# 0 "" 2
 485              	#NO_APP
 486 0194 2338F4FC 		sd	a5,-48(s0)
 136:src/../h/riscv.hpp **** }
 487              		.loc 2 136 5 is_stmt 1
 136:src/../h/riscv.hpp **** }
 488              		.loc 2 136 12 is_stmt 0
 489 0198 033904FD 		ld	s2,-48(s0)
 490              	.LVL33:
 491              	.LBE59:
 492              	.LBE58:
  77:src/riscv.cpp ****             TCB::dispatch();
 493              		.loc 1 77 13 is_stmt 1
  77:src/riscv.cpp ****             TCB::dispatch();
 494              		.loc 1 77 35 is_stmt 0
 495 019c 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 495      83B70700 
 496 01a4 23B00700 		sd	zero,0(a5)
  78:src/riscv.cpp ****             w_sstatus(sstatus); w_sepc(sepc);
 497              		.loc 1 78 13 is_stmt 1
  78:src/riscv.cpp ****             w_sstatus(sstatus); w_sepc(sepc);
 498              		.loc 1 78 26 is_stmt 0
 499 01a8 97000000 		call	_ZN3TCB8dispatchEv@plt
 499      E7800000 
 500              	.LVL34:
  79:src/riscv.cpp ****         }
 501              		.loc 1 79 13 is_stmt 1
 502              	.LBB60:
 503              	.LBB61:
 139:src/../h/riscv.hpp **** }
 504              		.loc 2 139 5
 139:src/../h/riscv.hpp **** }
 505              		.loc 2 139 77 is_stmt 0
 506              	#APP
 507              	# 139 "src/../h/riscv.hpp" 1
 508              		csrw sstatus, s2
 509              	# 0 "" 2
 510              	.LVL35:
 511              	#NO_APP
 512              	.LBE61:
 513              	.LBE60:
  79:src/riscv.cpp ****         }
 514              		.loc 1 79 33 is_stmt 1
 515              	.LBB62:
GAS LISTING /tmp/ccIvwpbK.s 			page 16


 516              	.LBB63:
  84:src/../h/riscv.hpp **** }
 517              		.loc 2 84 5
  84:src/../h/riscv.hpp **** }
 518              		.loc 2 84 65 is_stmt 0
 519              	#APP
 520              	# 84 "src/../h/riscv.hpp" 1
  85:src/../h/riscv.hpp **** 
 521              		csrw sepc, s1
 522              	# 0 "" 2
 523              		.loc 2 85 1
 524              	#NO_APP
 525 01b8 6FF01FFC 		j	.L11
 526              	.LVL36:
 527              	.L16:
 528              	.LBE63:
 529              	.LBE62:
 530              	.LBE55:
 531              	.LBE66:
 532              	.LBE51:
  84:src/riscv.cpp ****     } else {
 533              		.loc 1 84 9 is_stmt 1
  84:src/riscv.cpp ****     } else {
 534              		.loc 1 84 24 is_stmt 0
 535 01bc 97000000 		call	console_handler@plt
 535      E7800000 
 536              	.LVL37:
 537              	.LBE76:
 538              	.LBE101:
 539              	.LBE106:
 540              		.loc 1 89 1
 541 01c4 6FF09FEB 		j	.L3
 542              		.cfi_endproc
 543              	.LFE23:
 545              	.Letext0:
 546              		.file 4 "src/../h/../lib/hw.h"
 547              		.file 5 "src/../h/MemoryAllocator.hpp"
 548              		.file 6 "src/../h/syscall_c.hpp"
 549              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/ccIvwpbK.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccIvwpbK.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccIvwpbK.s:13     .text:0000000000000000 .L0 
     /tmp/ccIvwpbK.s:14     .text:0000000000000000 .L0 
     /tmp/ccIvwpbK.s:15     .text:0000000000000004 .L0 
     /tmp/ccIvwpbK.s:17     .text:0000000000000008 .L0 
     /tmp/ccIvwpbK.s:19     .text:000000000000000c .L0 
     /tmp/ccIvwpbK.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:11     .text:000000000000000c .L0 
     /tmp/ccIvwpbK.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:12     .text:0000000000000010 .L0 
     /tmp/ccIvwpbK.s:33     .text:0000000000000014 .L0 
     /tmp/ccIvwpbK.s:34     .text:0000000000000018 .L0 
     /tmp/ccIvwpbK.s:35     .text:0000000000000018 .L0 
     /tmp/ccIvwpbK.s:37     .text:000000000000001c .L0 
     /tmp/ccIvwpbK.s:39     .text:0000000000000020 .L0 
     /tmp/ccIvwpbK.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccIvwpbK.s:48     .text:0000000000000020 .L0 
     /tmp/ccIvwpbK.s:49     .text:0000000000000020 .L0 
     /tmp/ccIvwpbK.s:50     .text:0000000000000024 .L0 
     /tmp/ccIvwpbK.s:55     .text:0000000000000034 .L0 
     /tmp/ccIvwpbK.s:56     .text:0000000000000034 .L0 
     /tmp/ccIvwpbK.s:57     .text:0000000000000034 .L0 
     /tmp/ccIvwpbK.s:58     .text:0000000000000034 .L0 
     /tmp/ccIvwpbK.s:60     .text:0000000000000038 .L0 
     /tmp/ccIvwpbK.s:65     .text:0000000000000038 .L0 
     /tmp/ccIvwpbK.s:66     .text:0000000000000038 .L0 
     /tmp/ccIvwpbK.s:67     .text:0000000000000038 .L0 
  src/../h/riscv.hpp:69     .text:0000000000000038 .L0 
     /tmp/ccIvwpbK.s:75     .text:0000000000000040 .L0 
     /tmp/ccIvwpbK.s:76     .text:0000000000000040 .L0 
     /tmp/ccIvwpbK.s:81     .text:0000000000000044 .L0 
     /tmp/ccIvwpbK.s:82     .text:0000000000000044 .L0 
       src/riscv.cpp:20     .text:0000000000000044 .L0 
     /tmp/ccIvwpbK.s:91     .text:0000000000000048 .L0 
     /tmp/ccIvwpbK.s:93     .text:000000000000004c .L0 
     /tmp/ccIvwpbK.s:100    .text:0000000000000054 .L0 
     /tmp/ccIvwpbK.s:109    .text:000000000000005c .L0 
     /tmp/ccIvwpbK.s:114    .text:000000000000006c .L0 
     /tmp/ccIvwpbK.s:124    .text:000000000000007c .L0 
     /tmp/ccIvwpbK.s:125    .text:0000000000000080 .L0 
     /tmp/ccIvwpbK.s:126    .text:0000000000000080 .L0 
     /tmp/ccIvwpbK.s:128    .text:0000000000000084 .L0 
     /tmp/ccIvwpbK.s:129    .text:0000000000000084 .L0 
     /tmp/ccIvwpbK.s:131    .text:0000000000000088 .L0 
     /tmp/ccIvwpbK.s:133    .text:000000000000008c .L0 
     /tmp/ccIvwpbK.s:135    .text:0000000000000090 .L0 
     /tmp/ccIvwpbK.s:139    .text:0000000000000094 .L0 
     /tmp/ccIvwpbK.s:145    .text:0000000000000094 .L0 
     /tmp/ccIvwpbK.s:146    .text:0000000000000094 .L0 
     /tmp/ccIvwpbK.s:147    .text:0000000000000094 .L0 
  src/../h/riscv.hpp:79     .text:0000000000000094 .L0 
     /tmp/ccIvwpbK.s:156    .text:000000000000009c .L0 
     /tmp/ccIvwpbK.s:157    .text:000000000000009c .L0 
     /tmp/ccIvwpbK.s:161    .text:00000000000000a0 .L0 
     /tmp/ccIvwpbK.s:166    .text:00000000000000a4 .L0 
GAS LISTING /tmp/ccIvwpbK.s 			page 18


     /tmp/ccIvwpbK.s:167    .text:00000000000000a4 .L0 
     /tmp/ccIvwpbK.s:168    .text:00000000000000a4 .L0 
  src/../h/riscv.hpp:135    .text:00000000000000a4 .L0 
     /tmp/ccIvwpbK.s:176    .text:00000000000000ac .L0 
     /tmp/ccIvwpbK.s:177    .text:00000000000000ac .L0 
     /tmp/ccIvwpbK.s:183    .text:00000000000000b0 .L0 
     /tmp/ccIvwpbK.s:193    .text:00000000000000b8 .L0 
     /tmp/ccIvwpbK.s:205    .text:00000000000000c0 .L0 
     /tmp/ccIvwpbK.s:215    .text:00000000000000c8 .L0 
     /tmp/ccIvwpbK.s:216    .text:00000000000000c8 .L0 
  src/../h/riscv.hpp:139    .text:00000000000000c8 .L0 
     /tmp/ccIvwpbK.s:228    .text:00000000000000cc .L0 
     /tmp/ccIvwpbK.s:229    .text:00000000000000cc .L0 
  src/../h/riscv.hpp:84     .text:00000000000000cc .L0 
     /tmp/ccIvwpbK.s:236    .text:00000000000000d0 .L0 
     /tmp/ccIvwpbK.s:244    .text:00000000000000d4 .L0 
     /tmp/ccIvwpbK.s:245    .text:00000000000000d4 .L0 
     /tmp/ccIvwpbK.s:246    .text:00000000000000d4 .L0 
       src/riscv.cpp:32     .text:00000000000000d4 .L0 
     /tmp/ccIvwpbK.s:253    .text:00000000000000d8 .L0 
     /tmp/ccIvwpbK.s:255    .text:00000000000000d8 .L0 
     /tmp/ccIvwpbK.s:258    .text:00000000000000e0 .L0 
       src/riscv.cpp:34     .text:00000000000000e0 .L0 
     /tmp/ccIvwpbK.s:271    .text:00000000000000e8 .L0 
     /tmp/ccIvwpbK.s:272    .text:00000000000000e8 .L0 
       src/riscv.cpp:39     .text:00000000000000e8 .L0 
     /tmp/ccIvwpbK.s:279    .text:00000000000000ec .L0 
     /tmp/ccIvwpbK.s:281    .text:00000000000000ec .L0 
     /tmp/ccIvwpbK.s:290    .text:00000000000000f8 .L0 
     /tmp/ccIvwpbK.s:291    .text:00000000000000f8 .L0 
     /tmp/ccIvwpbK.s:292    .text:00000000000000f8 .L0 
     /tmp/ccIvwpbK.s:293    .text:00000000000000f8 .L0 
       src/riscv.cpp:47     .text:00000000000000f8 .L0 
     /tmp/ccIvwpbK.s:300    .text:00000000000000fc .L0 
       src/riscv.cpp:48     .text:00000000000000fc .L0 
     /tmp/ccIvwpbK.s:306    .text:0000000000000100 .L0 
       src/riscv.cpp:49     .text:0000000000000100 .L0 
     /tmp/ccIvwpbK.s:312    .text:0000000000000104 .L0 
     /tmp/ccIvwpbK.s:314    .text:0000000000000104 .L0 
     /tmp/ccIvwpbK.s:317    .text:000000000000010c .L0 
       src/riscv.cpp:53     .text:000000000000010c .L0 
     /tmp/ccIvwpbK.s:336    .text:0000000000000114 .L0 
     /tmp/ccIvwpbK.s:337    .text:0000000000000114 .L0 
     /tmp/ccIvwpbK.s:338    .text:0000000000000114 .L0 
  src/../h/riscv.hpp:79     .text:0000000000000114 .L0 
     /tmp/ccIvwpbK.s:346    .text:000000000000011c .L0 
     /tmp/ccIvwpbK.s:347    .text:000000000000011c .L0 
     /tmp/ccIvwpbK.s:351    .text:0000000000000120 .L0 
     /tmp/ccIvwpbK.s:356    .text:0000000000000124 .L0 
     /tmp/ccIvwpbK.s:357    .text:0000000000000124 .L0 
     /tmp/ccIvwpbK.s:358    .text:0000000000000124 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000124 .L0 
     /tmp/ccIvwpbK.s:366    .text:000000000000012c .L0 
     /tmp/ccIvwpbK.s:367    .text:000000000000012c .L0 
     /tmp/ccIvwpbK.s:372    .text:0000000000000130 .L0 
     /tmp/ccIvwpbK.s:373    .text:0000000000000130 .L0 
     /tmp/ccIvwpbK.s:376    .text:000000000000013c .L0 
GAS LISTING /tmp/ccIvwpbK.s 			page 19


     /tmp/ccIvwpbK.s:377    .text:000000000000013c .L0 
     /tmp/ccIvwpbK.s:382    .text:0000000000000144 .L0 
     /tmp/ccIvwpbK.s:383    .text:0000000000000144 .L0 
  src/../h/riscv.hpp:139    .text:0000000000000144 .L0 
     /tmp/ccIvwpbK.s:395    .text:0000000000000148 .L0 
     /tmp/ccIvwpbK.s:396    .text:0000000000000148 .L0 
  src/../h/riscv.hpp:84     .text:0000000000000148 .L0 
     /tmp/ccIvwpbK.s:403    .text:000000000000014c .L0 
     /tmp/ccIvwpbK.s:412    .text:0000000000000150 .L0 
     /tmp/ccIvwpbK.s:413    .text:0000000000000150 .L0 
     /tmp/ccIvwpbK.s:420    .text:0000000000000164 .L0 
     /tmp/ccIvwpbK.s:421    .text:0000000000000164 .L0 
     /tmp/ccIvwpbK.s:428    .text:0000000000000170 .L0 
     /tmp/ccIvwpbK.s:429    .text:0000000000000170 .L0 
     /tmp/ccIvwpbK.s:434    .text:0000000000000174 .L0 
     /tmp/ccIvwpbK.s:441    .text:0000000000000178 .L0 
     /tmp/ccIvwpbK.s:442    .text:0000000000000178 .L0 
     /tmp/ccIvwpbK.s:443    .text:0000000000000178 .L0 
     /tmp/ccIvwpbK.s:450    .text:0000000000000180 .L0 
     /tmp/ccIvwpbK.s:460    .text:0000000000000184 .L0 
     /tmp/ccIvwpbK.s:461    .text:0000000000000184 .L0 
     /tmp/ccIvwpbK.s:462    .text:0000000000000184 .L0 
  src/../h/riscv.hpp:79     .text:0000000000000184 .L0 
     /tmp/ccIvwpbK.s:470    .text:000000000000018c .L0 
     /tmp/ccIvwpbK.s:471    .text:000000000000018c .L0 
     /tmp/ccIvwpbK.s:478    .text:0000000000000190 .L0 
     /tmp/ccIvwpbK.s:479    .text:0000000000000190 .L0 
     /tmp/ccIvwpbK.s:480    .text:0000000000000190 .L0 
  src/../h/riscv.hpp:135    .text:0000000000000190 .L0 
     /tmp/ccIvwpbK.s:488    .text:0000000000000198 .L0 
     /tmp/ccIvwpbK.s:489    .text:0000000000000198 .L0 
     /tmp/ccIvwpbK.s:494    .text:000000000000019c .L0 
     /tmp/ccIvwpbK.s:495    .text:000000000000019c .L0 
     /tmp/ccIvwpbK.s:498    .text:00000000000001a8 .L0 
     /tmp/ccIvwpbK.s:499    .text:00000000000001a8 .L0 
     /tmp/ccIvwpbK.s:504    .text:00000000000001b0 .L0 
     /tmp/ccIvwpbK.s:505    .text:00000000000001b0 .L0 
  src/../h/riscv.hpp:139    .text:00000000000001b0 .L0 
     /tmp/ccIvwpbK.s:517    .text:00000000000001b4 .L0 
     /tmp/ccIvwpbK.s:518    .text:00000000000001b4 .L0 
  src/../h/riscv.hpp:84     .text:00000000000001b4 .L0 
     /tmp/ccIvwpbK.s:525    .text:00000000000001b8 .L0 
     /tmp/ccIvwpbK.s:534    .text:00000000000001bc .L0 
     /tmp/ccIvwpbK.s:535    .text:00000000000001bc .L0 
     /tmp/ccIvwpbK.s:541    .text:00000000000001c4 .L0 
     /tmp/ccIvwpbK.s:542    .text:00000000000001c8 .L0 
     /tmp/ccIvwpbK.s:550    .text:00000000000001c8 .L0 
     /tmp/ccIvwpbK.s:373    .text:0000000000000130 .L0 
     /tmp/ccIvwpbK.s:413    .text:0000000000000150 .L0 
     /tmp/ccIvwpbK.s:421    .text:0000000000000164 .L0 
     /tmp/ccIvwpbK.s:495    .text:000000000000019c .L0 
     /tmp/ccIvwpbK.s:95     .text:0000000000000054 .L4
     /tmp/ccIvwpbK.s:138    .text:0000000000000094 .L13
     /tmp/ccIvwpbK.s:326    .text:0000000000000114 .L14
     /tmp/ccIvwpbK.s:405    .text:0000000000000150 .L15
     /tmp/ccIvwpbK.s:527    .text:00000000000001bc .L16
     /tmp/ccIvwpbK.s:238    .text:00000000000000d4 .L17
GAS LISTING /tmp/ccIvwpbK.s 			page 20


     /tmp/ccIvwpbK.s:267    .text:00000000000000e8 .L18
     /tmp/ccIvwpbK.s:286    .text:00000000000000f8 .L19
     /tmp/ccIvwpbK.s:119    .text:000000000000007c .L3
     /tmp/ccIvwpbK.s:208    .text:00000000000000c8 .L6
     /tmp/ccIvwpbK.s:452    .text:0000000000000184 .L20
     /tmp/ccIvwpbK.s:435    .text:0000000000000178 .L11
     /tmp/ccIvwpbK.s:1665   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccIvwpbK.s:2971   .debug_str:00000000000005d5 .LASF107
     /tmp/ccIvwpbK.s:2905   .debug_str:00000000000003e8 .LASF108
     /tmp/ccIvwpbK.s:2941   .debug_str:00000000000004dc .LASF109
     /tmp/ccIvwpbK.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccIvwpbK.s:545    .text:00000000000001c8 .Letext0
     /tmp/ccIvwpbK.s:2757   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccIvwpbK.s:2883   .debug_str:0000000000000376 .LASF0
     /tmp/ccIvwpbK.s:2901   .debug_str:00000000000003c2 .LASF1
     /tmp/ccIvwpbK.s:2869   .debug_str:0000000000000316 .LASF2
     /tmp/ccIvwpbK.s:2841   .debug_str:0000000000000243 .LASF4
     /tmp/ccIvwpbK.s:2935   .debug_str:00000000000004b2 .LASF3
     /tmp/ccIvwpbK.s:2777   .debug_str:000000000000005f .LASF5
     /tmp/ccIvwpbK.s:2903   .debug_str:00000000000003d5 .LASF6
     /tmp/ccIvwpbK.s:2881   .debug_str:0000000000000363 .LASF7
     /tmp/ccIvwpbK.s:2961   .debug_str:0000000000000577 .LASF8
     /tmp/ccIvwpbK.s:2829   .debug_str:00000000000001c8 .LASF9
     /tmp/ccIvwpbK.s:2911   .debug_str:0000000000000411 .LASF10
     /tmp/ccIvwpbK.s:2957   .debug_str:000000000000055d .LASF11
     /tmp/ccIvwpbK.s:2779   .debug_str:0000000000000066 .LASF12
     /tmp/ccIvwpbK.s:2763   .debug_str:0000000000000011 .LASF13
     /tmp/ccIvwpbK.s:2787   .debug_str:00000000000000b0 .LASF14
     /tmp/ccIvwpbK.s:2929   .debug_str:000000000000047e .LASF15
     /tmp/ccIvwpbK.s:2797   .debug_str:00000000000000db .LASF16
     /tmp/ccIvwpbK.s:2897   .debug_str:00000000000003b1 .LASF56
     /tmp/ccIvwpbK.s:2855   .debug_str:00000000000002ac .LASF110
     /tmp/ccIvwpbK.s:2945   .debug_str:0000000000000508 .LASF17
     /tmp/ccIvwpbK.s:2895   .debug_str:00000000000003a8 .LASF18
     /tmp/ccIvwpbK.s:2849   .debug_str:0000000000000279 .LASF19
     /tmp/ccIvwpbK.s:2927   .debug_str:0000000000000473 .LASF52
     /tmp/ccIvwpbK.s:2983   .debug_str:00000000000006d0 .LASF54
     /tmp/ccIvwpbK.s:2765   .debug_str:0000000000000021 .LASF20
     /tmp/ccIvwpbK.s:2813   .debug_str:000000000000014f .LASF22
     /tmp/ccIvwpbK.s:2809   .debug_str:000000000000013e .LASF24
     /tmp/ccIvwpbK.s:2807   .debug_str:0000000000000129 .LASF26
     /tmp/ccIvwpbK.s:2939   .debug_str:00000000000004d5 .LASF21
     /tmp/ccIvwpbK.s:2915   .debug_str:0000000000000429 .LASF23
     /tmp/ccIvwpbK.s:2953   .debug_str:000000000000054e .LASF25
     /tmp/ccIvwpbK.s:2949   .debug_str:0000000000000529 .LASF27
     /tmp/ccIvwpbK.s:2823   .debug_str:00000000000001a3 .LASF28
     /tmp/ccIvwpbK.s:2799   .debug_str:00000000000000f1 .LASF29
     /tmp/ccIvwpbK.s:2761   .debug_str:0000000000000009 .LASF30
     /tmp/ccIvwpbK.s:2833   .debug_str:00000000000001ec .LASF31
     /tmp/ccIvwpbK.s:2955   .debug_str:0000000000000555 .LASF32
     /tmp/ccIvwpbK.s:2781   .debug_str:0000000000000076 .LASF33
     /tmp/ccIvwpbK.s:2989   .debug_str:0000000000000705 .LASF34
     /tmp/ccIvwpbK.s:2815   .debug_str:0000000000000164 .LASF35
     /tmp/ccIvwpbK.s:2885   .debug_str:0000000000000383 .LASF36
     /tmp/ccIvwpbK.s:2977   .debug_str:000000000000068c .LASF37
     /tmp/ccIvwpbK.s:2773   .debug_str:000000000000003f .LASF38
     /tmp/ccIvwpbK.s:2821   .debug_str:0000000000000190 .LASF39
GAS LISTING /tmp/ccIvwpbK.s 			page 21


     /tmp/ccIvwpbK.s:2825   .debug_str:00000000000001ab .LASF40
     /tmp/ccIvwpbK.s:2951   .debug_str:000000000000053c .LASF41
     /tmp/ccIvwpbK.s:2771   .debug_str:0000000000000039 .LASF42
     /tmp/ccIvwpbK.s:2993   .debug_str:0000000000000724 .LASF43
     /tmp/ccIvwpbK.s:2987   .debug_str:00000000000006fa .LASF44
     /tmp/ccIvwpbK.s:2933   .debug_str:000000000000049a .LASF45
     /tmp/ccIvwpbK.s:2899   .debug_str:00000000000003b7 .LASF46
     /tmp/ccIvwpbK.s:2947   .debug_str:0000000000000511 .LASF47
     /tmp/ccIvwpbK.s:2785   .debug_str:00000000000000a6 .LASF48
     /tmp/ccIvwpbK.s:2837   .debug_str:0000000000000205 .LASF49
     /tmp/ccIvwpbK.s:2875   .debug_str:0000000000000339 .LASF50
     /tmp/ccIvwpbK.s:2831   .debug_str:00000000000001d6 .LASF51
     /tmp/ccIvwpbK.s:2803   .debug_str:000000000000010a .LASF53
     /tmp/ccIvwpbK.s:2783   .debug_str:000000000000008a .LASF55
     /tmp/ccIvwpbK.s:2965   .debug_str:0000000000000591 .LASF74
     /tmp/ccIvwpbK.s:2853   .debug_str:000000000000028a .LASF76
     /tmp/ccIvwpbK.s:2769   .debug_str:0000000000000031 .LASF83
     /tmp/ccIvwpbK.s:2835   .debug_str:0000000000000200 .LASF57
     /tmp/ccIvwpbK.s:2919   .debug_str:0000000000000455 .LASF59
     /tmp/ccIvwpbK.s:2907   .debug_str:00000000000003f6 .LASF61
     /tmp/ccIvwpbK.s:2827   .debug_str:00000000000001b1 .LASF63
     /tmp/ccIvwpbK.s:2871   .debug_str:0000000000000324 .LASF58
     /tmp/ccIvwpbK.s:2991   .debug_str:000000000000070d .LASF60
     /tmp/ccIvwpbK.s:2865   .debug_str:00000000000002fb .LASF62
     /tmp/ccIvwpbK.s:2775   .debug_str:0000000000000046 .LASF64
     /tmp/ccIvwpbK.s:2795   .debug_str:00000000000000ce .LASF65
     /tmp/ccIvwpbK.s:2863   .debug_str:00000000000002df .LASF66
     /tmp/ccIvwpbK.s:2923   .debug_str:0000000000000469 .LASF111
     /tmp/ccIvwpbK.s:2931   .debug_str:0000000000000494 .LASF67
     /tmp/ccIvwpbK.s:2877   .debug_str:0000000000000343 .LASF68
     /tmp/ccIvwpbK.s:2811   .debug_str:0000000000000147 .LASF112
     /tmp/ccIvwpbK.s:2943   .debug_str:00000000000004f7 .LASF113
     /tmp/ccIvwpbK.s:2847   .debug_str:0000000000000274 .LASF69
     /tmp/ccIvwpbK.s:2889   .debug_str:0000000000000393 .LASF70
     /tmp/ccIvwpbK.s:2851   .debug_str:0000000000000282 .LASF71
     /tmp/ccIvwpbK.s:2893   .debug_str:000000000000039e .LASF72
     /tmp/ccIvwpbK.s:2845   .debug_str:000000000000026b .LASF73
     /tmp/ccIvwpbK.s:2867   .debug_str:0000000000000308 .LASF75
     /tmp/ccIvwpbK.s:2917   .debug_str:000000000000043c .LASF77
     /tmp/ccIvwpbK.s:2969   .debug_str:00000000000005c7 .LASF114
     /tmp/ccIvwpbK.s:2839   .debug_str:000000000000021b .LASF115
     /tmp/ccIvwpbK.s:2887   .debug_str:000000000000038a .LASF78
     /tmp/ccIvwpbK.s:2817   .debug_str:0000000000000178 .LASF79
     /tmp/ccIvwpbK.s:2937   .debug_str:00000000000004c4 .LASF94
     /tmp/ccIvwpbK.s:2857   .debug_str:00000000000002b7 .LASF80
     /tmp/ccIvwpbK.s:2973   .debug_str:0000000000000677 .LASF81
     /tmp/ccIvwpbK.s:2819   .debug_str:000000000000018b .LASF82
     /tmp/ccIvwpbK.s:2959   .debug_str:000000000000056c .LASF84
     /tmp/ccIvwpbK.s:2925   .debug_str:000000000000046e .LASF85
     /tmp/ccIvwpbK.s:2791   .debug_str:00000000000000c1 .LASF86
     /tmp/ccIvwpbK.s:2879   .debug_str:0000000000000353 .LASF87
     /tmp/ccIvwpbK.s:2873   .debug_str:0000000000000330 .LASF88
     /tmp/ccIvwpbK.s:2979   .debug_str:000000000000069f .LASF89
     /tmp/ccIvwpbK.s:2963   .debug_str:0000000000000587 .LASF90
     /tmp/ccIvwpbK.s:2967   .debug_str:00000000000005a6 .LASF91
     /tmp/ccIvwpbK.s:2913   .debug_str:0000000000000420 .LASF92
     /tmp/ccIvwpbK.s:2843   .debug_str:000000000000024a .LASF93
GAS LISTING /tmp/ccIvwpbK.s 			page 22


     /tmp/ccIvwpbK.s:2909   .debug_str:0000000000000401 .LASF95
     /tmp/ccIvwpbK.s:2981   .debug_str:00000000000006bf .LASF96
     /tmp/ccIvwpbK.s:2759   .debug_str:0000000000000000 .LASF97
     /tmp/ccIvwpbK.s:46     .text:0000000000000020 .LFB23
     /tmp/ccIvwpbK.s:543    .text:00000000000001c8 .LFE23
     /tmp/ccIvwpbK.s:2767   .debug_str:000000000000002a .LASF98
     /tmp/ccIvwpbK.s:2536   .debug_loc:0000000000000000 .LLST0
     /tmp/ccIvwpbK.s:2975   .debug_str:0000000000000682 .LASF99
     /tmp/ccIvwpbK.s:2559   .debug_loc:000000000000006f .LLST1
     /tmp/ccIvwpbK.s:2747   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccIvwpbK.s:2891   .debug_str:0000000000000399 .LASF100
     /tmp/ccIvwpbK.s:2582   .debug_loc:00000000000000de .LLST12
     /tmp/ccIvwpbK.s:2921   .debug_str:0000000000000461 .LASF101
     /tmp/ccIvwpbK.s:2589   .debug_loc:0000000000000101 .LLST13
     /tmp/ccIvwpbK.s:242    .text:00000000000000d4 .LBB90
     /tmp/ccIvwpbK.s:264    .text:00000000000000e4 .LBE90
     /tmp/ccIvwpbK.s:2861   .debug_str:00000000000002d0 .LASF102
     /tmp/ccIvwpbK.s:2596   .debug_loc:0000000000000124 .LLST18
     /tmp/ccIvwpbK.s:2985   .debug_str:00000000000006e8 .LASF103
     /tmp/ccIvwpbK.s:2603   .debug_loc:0000000000000147 .LLST19
     /tmp/ccIvwpbK.s:256    .text:00000000000000e0 .LVL12
     /tmp/ccIvwpbK.s:269    .text:00000000000000e8 .LBB87
     /tmp/ccIvwpbK.s:283    .text:00000000000000f4 .LBE87
     /tmp/ccIvwpbK.s:2859   .debug_str:00000000000002c2 .LASF104
     /tmp/ccIvwpbK.s:2610   .debug_loc:000000000000016a .LLST17
     /tmp/ccIvwpbK.s:282    .text:00000000000000f4 .LVL15
     /tmp/ccIvwpbK.s:288    .text:00000000000000f8 .LBB86
     /tmp/ccIvwpbK.s:323    .text:0000000000000110 .LBE86
     /tmp/ccIvwpbK.s:2793   .debug_str:00000000000000c6 .LASF105
     /tmp/ccIvwpbK.s:2617   .debug_loc:000000000000018d .LLST14
     /tmp/ccIvwpbK.s:2629   .debug_loc:00000000000001c4 .LLST15
     /tmp/ccIvwpbK.s:2641   .debug_loc:00000000000001fb .LLST16
     /tmp/ccIvwpbK.s:315    .text:000000000000010c .LVL20
     /tmp/ccIvwpbK.s:143    .text:0000000000000094 .LBB79
     /tmp/ccIvwpbK.s:159    .text:00000000000000a0 .LBE79
     /tmp/ccIvwpbK.s:164    .text:00000000000000a4 .LBB81
     /tmp/ccIvwpbK.s:180    .text:00000000000000b0 .LBE81
     /tmp/ccIvwpbK.s:213    .text:00000000000000c8 .LBB94
     /tmp/ccIvwpbK.s:224    .text:00000000000000cc .LBE94
     /tmp/ccIvwpbK.s:2649   .debug_loc:000000000000021f .LLST20
     /tmp/ccIvwpbK.s:226    .text:00000000000000cc .LBB96
     /tmp/ccIvwpbK.s:240    .text:00000000000000d4 .LBE96
     /tmp/ccIvwpbK.s:2656   .debug_loc:0000000000000242 .LLST21
     /tmp/ccIvwpbK.s:332    .text:0000000000000114 .LBB67
     /tmp/ccIvwpbK.s:408    .text:0000000000000150 .LBE67
     /tmp/ccIvwpbK.s:2663   .debug_loc:0000000000000265 .LLST8
     /tmp/ccIvwpbK.s:2670   .debug_loc:0000000000000288 .LLST9
     /tmp/ccIvwpbK.s:334    .text:0000000000000114 .LBB68
     /tmp/ccIvwpbK.s:349    .text:0000000000000120 .LBE68
     /tmp/ccIvwpbK.s:354    .text:0000000000000124 .LBB70
     /tmp/ccIvwpbK.s:370    .text:0000000000000130 .LBE70
     /tmp/ccIvwpbK.s:380    .text:0000000000000144 .LBB72
     /tmp/ccIvwpbK.s:391    .text:0000000000000148 .LBE72
     /tmp/ccIvwpbK.s:2677   .debug_loc:00000000000002ab .LLST10
     /tmp/ccIvwpbK.s:393    .text:0000000000000148 .LBB74
     /tmp/ccIvwpbK.s:407    .text:0000000000000150 .LBE74
     /tmp/ccIvwpbK.s:2684   .debug_loc:00000000000002ce .LLST11
GAS LISTING /tmp/ccIvwpbK.s 			page 23


     /tmp/ccIvwpbK.s:378    .text:0000000000000144 .LVL24
     /tmp/ccIvwpbK.s:456    .text:0000000000000184 .LBB55
     /tmp/ccIvwpbK.s:530    .text:00000000000001bc .LBE55
     /tmp/ccIvwpbK.s:2691   .debug_loc:00000000000002f1 .LLST3
     /tmp/ccIvwpbK.s:2698   .debug_loc:0000000000000314 .LLST4
     /tmp/ccIvwpbK.s:458    .text:0000000000000184 .LBB56
     /tmp/ccIvwpbK.s:474    .text:0000000000000190 .LBE56
     /tmp/ccIvwpbK.s:476    .text:0000000000000190 .LBB58
     /tmp/ccIvwpbK.s:492    .text:000000000000019c .LBE58
     /tmp/ccIvwpbK.s:502    .text:00000000000001b0 .LBB60
     /tmp/ccIvwpbK.s:513    .text:00000000000001b4 .LBE60
     /tmp/ccIvwpbK.s:2705   .debug_loc:0000000000000337 .LLST5
     /tmp/ccIvwpbK.s:515    .text:00000000000001b4 .LBB62
     /tmp/ccIvwpbK.s:529    .text:00000000000001bc .LBE62
     /tmp/ccIvwpbK.s:2712   .debug_loc:000000000000035a .LLST6
     /tmp/ccIvwpbK.s:500    .text:00000000000001b0 .LVL34
     /tmp/ccIvwpbK.s:62     .text:0000000000000038 .LBB46
     /tmp/ccIvwpbK.s:79     .text:0000000000000044 .LBE46
     /tmp/ccIvwpbK.s:424    .text:0000000000000170 .LBB53
     /tmp/ccIvwpbK.s:432    .text:0000000000000174 .LBE53
     /tmp/ccIvwpbK.s:2719   .debug_loc:000000000000037d .LLST2
     /tmp/ccIvwpbK.s:439    .text:0000000000000178 .LBB64
     /tmp/ccIvwpbK.s:454    .text:0000000000000184 .LBE64
     /tmp/ccIvwpbK.s:2726   .debug_loc:00000000000003a0 .LLST7
     /tmp/ccIvwpbK.s:536    .text:00000000000001c4 .LVL37
     /tmp/ccIvwpbK.s:10     .text:0000000000000000 .LFB22
     /tmp/ccIvwpbK.s:40     .text:0000000000000020 .LFE22
     /tmp/ccIvwpbK.s:2801   .debug_str:0000000000000105 .LASF116
     /tmp/ccIvwpbK.s:2789   .debug_str:00000000000000bc .LASF106
     /tmp/ccIvwpbK.s:2805   .debug_str:0000000000000119 .LASF117
     /tmp/ccIvwpbK.s:77     .text:0000000000000044 .LVL0
     /tmp/ccIvwpbK.s:118    .text:000000000000007c .LVL3
     /tmp/ccIvwpbK.s:137    .text:0000000000000094 .LVL4
     /tmp/ccIvwpbK.s:152    .text:0000000000000098 .LVL5
     /tmp/ccIvwpbK.s:325    .text:0000000000000114 .LVL21
     /tmp/ccIvwpbK.s:404    .text:0000000000000150 .LVL26
     /tmp/ccIvwpbK.s:414    .text:0000000000000158 .LVL27
     /tmp/ccIvwpbK.s:526    .text:00000000000001bc .LVL36
     /tmp/ccIvwpbK.s:87     .text:0000000000000048 .LVL1
     /tmp/ccIvwpbK.s:101    .text:0000000000000058 .LVL2
     /tmp/ccIvwpbK.s:207    .text:00000000000000c8 .LVL8
     /tmp/ccIvwpbK.s:237    .text:00000000000000d4 .LVL10
     /tmp/ccIvwpbK.s:266    .text:00000000000000e8 .LVL13
     /tmp/ccIvwpbK.s:285    .text:00000000000000f8 .LVL16
     /tmp/ccIvwpbK.s:298    .text:00000000000000fc .LVL17
     /tmp/ccIvwpbK.s:162    .text:00000000000000a4 .LVL6
     /tmp/ccIvwpbK.s:178    .text:00000000000000b0 .LVL7
     /tmp/ccIvwpbK.s:251    .text:00000000000000d8 .LVL11
     /tmp/ccIvwpbK.s:277    .text:00000000000000ec .LVL14
     /tmp/ccIvwpbK.s:304    .text:0000000000000100 .LVL18
     /tmp/ccIvwpbK.s:310    .text:0000000000000104 .LVL19
     /tmp/ccIvwpbK.s:221    .text:00000000000000cc .LVL9
     /tmp/ccIvwpbK.s:352    .text:0000000000000124 .LVL22
     /tmp/ccIvwpbK.s:368    .text:0000000000000130 .LVL23
     /tmp/ccIvwpbK.s:388    .text:0000000000000148 .LVL25
     /tmp/ccIvwpbK.s:472    .text:0000000000000190 .LVL32
     /tmp/ccIvwpbK.s:490    .text:000000000000019c .LVL33
GAS LISTING /tmp/ccIvwpbK.s 			page 24


     /tmp/ccIvwpbK.s:510    .text:00000000000001b4 .LVL35
     /tmp/ccIvwpbK.s:423    .text:0000000000000170 .LVL28
     /tmp/ccIvwpbK.s:430    .text:0000000000000174 .LVL29
     /tmp/ccIvwpbK.s:438    .text:0000000000000178 .LVL30
     /tmp/ccIvwpbK.s:451    .text:0000000000000184 .LVL31
     /tmp/ccIvwpbK.s:551    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccIvwpbK.s:141    .text:0000000000000094 .LBB78
     /tmp/ccIvwpbK.s:186    .text:00000000000000b8 .LBE78
     /tmp/ccIvwpbK.s:190    .text:00000000000000b8 .LBB99
     /tmp/ccIvwpbK.s:197    .text:00000000000000c0 .LBE99
     /tmp/ccIvwpbK.s:201    .text:00000000000000c0 .LBB100
     /tmp/ccIvwpbK.s:330    .text:0000000000000114 .LBE100

UNDEFINED SYMBOLS
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN3TCB12createThreadEPFvvE
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB7runningE
console_handler
